<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mybatis-3-mapper.dtd:约束文件的名称，限制和检查在当前文件中出现的标签和属性符合mybatis的要求-->
<!--namespace：命名空间，要有唯一的值，要求使用dao接口的权限定名称（一个dao接口对应一个mapper，namespace指明对应哪个dao接口）-->
<mapper namespace="com.example.demo.dao.MessageDAO">

 <insert id="saveMessage" parameterType="com.example.demo.entity.Message">
  INSERT INTO message ( out_time,  text,type,product_id)
  VALUES ( #{outTime}, #{text}, #{type},#{productId})
 </insert>
 <update id="updateById" parameterType="int">
  UPDATE message
  SET type = 'true'
  WHERE id = #{messageId}
 </update>


 <select id="messageList" resultType="com.example.demo.entity.Message">
  select * from message
 </select>


 <select id="getMessagePage" resultType="com.example.demo.entity.Message">
  SELECT *
  FROM message
  WHERE 1=1
  <if test="beforeTime != null">
   AND out_time &lt;= #{beforeTime}
  </if>
  <if test="afterTime != null">
   AND out_time &gt;= #{afterTime}
  </if>
  ORDER BY out_time DESC
  LIMIT #{count}, #{pageSize}
 </select>
 <select id="total" resultType="java.lang.Integer">
  select COUNT(*) FROM message
  WHERE 1=1
  <if test="beforeTime != null">
   AND out_time &lt;= #{beforeTime}
  </if>
  <if test="afterTime != null">
  AND out_time &gt;= #{afterTime}
  </if>
 </select>

 <!-- 所有的数据库操作都要写在mapper标签中，可以使用特定的标签表示数据库中的特定操作 -->
</mapper>